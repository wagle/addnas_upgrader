#!/bin/sh
#
# zcip.conf
#

SCRIPTS_PATH=/etc/init.d
STATUS_FILES_PATH=/var/run
NETWORK_STARTED_FILE=$STATUS_FILES_PATH/network_started
CRONTAB_PATH=/etc/crontabs

case "$1" in
	init)
		# for now, zcip requires the link to be already up,
		# and it drops links when they go down.  that isn't
		# the most robust model...
		exit 0
		;;
	config)
		if [ "x$ip" = x ]
		then
			exit 1
		fi

		$SCRIPTS_PATH/cron-daemon.sh stop

		# remember $ip for $interface, to use on restart
		if [ "x$IP" != x -a -w "$IP.$interface" ]
		then
			echo $ip > "$IP.$interface"
		fi

		# Configure the interface - must already be up
		ip addr add dev $interface scope link local "$ip/16" broadcast +

		# Update configuration information used by network dependent services
		$SCRIPTS_PATH/update_network_config.sh $ip $domain

		# Start servers dependent on networking
		$SCRIPTS_PATH/network_servers.sh start

		# Start services started after network dependent servers
		$SCRIPTS_PATH/post_network_start.sh start

		# Use the crontab with DHCP polling, so will keep trying to obtain a
		# DHCP lease
		cp $CRONTAB_PATH/root-dhcp $CRONTAB_PATH/root
		$SCRIPTS_PATH/cron-daemon.sh start

		# Create file indicating that networking has been started
		touch $NETWORK_STARTED_FILE
		;;
	deconfig)
		if [ x$ip = x ]
		then
			exit 1
		fi

		# Stop servers dependent on networking
		$SCRIPTS_PATH/network_servers.sh stop

		# Deconfigure the interface
		ip addr flush $interface
		;;
esac

exit 1

